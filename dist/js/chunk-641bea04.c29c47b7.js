(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-641bea04'], { '0bf5': function (e, t, a) { 'use strict'; a.r(t); var s = function () { var e = this; var t = e.$createElement; var a = e._self._c || t; return a('div', { staticClass: 'image-container' }, [a('el-card', { staticClass: 'box-card' }, [a('div', { attrs: { slot: 'header' }, slot: 'header' }, [a('my-breadcrumb', [e._v('素材管理')])], 1), a('div', { staticStyle: { 'padding-bottom': '20px' } }, [a('el-radio-group', { attrs: { size: 'medium' }, on: { change: e.YToggle }, model: { value: e.isCollected, callback: function (t) { e.isCollected = t }, expression: 'isCollected' } }, [a('el-radio-button', { attrs: { label: !1 } }, [e._v('全部')]), a('el-radio-button', { attrs: { label: !0 } }, [e._v('收藏')])], 1), a('el-button', { staticStyle: { float: 'right' }, attrs: { type: 'success', size: 'mini' }, on: { click: function (t) { e.dialogVisible = !0 } } }, [e._v('上传图片素材 ')])], 1), a('el-row', { attrs: { gutter: 10 } }, e._l(e.images, function (t) { return a('el-col', { key: t.id, staticClass: 'img_item', attrs: { span: 4 } }, [a('el-image', { staticStyle: { height: '180px', width: '180px' }, attrs: { src: t.url, fit: 'cover' } }), a('div', { directives: [{ name: 'show', rawName: 'v-show', value: !e.isCollected, expression: '!isCollected' }], staticClass: 'option' }, [a('span', { staticClass: 'el-icon-star-off', style: { color: t.is_collected ? 'red' : '#fff' }, on: { click: function (a) { return e.hSwitchCollect(t) } } }), a('span', { staticClass: 'el-icon-delete', on: { click: function (a) { return e.hDelete(t.id) } } })])], 1) }), 1), a('el-pagination', { staticStyle: { 'margin-top': '10px' }, attrs: { background: '', layout: 'prev, pager, next', total: e.total_count }, on: { 'current-change': e.hPageChange } })], 1), a('el-dialog', { attrs: { 'append-to-body': '', title: '上传素材', visible: e.dialogVisible }, on: { 'update:visible': function (t) { e.dialogVisible = t } } }, [a('el-upload', { staticClass: 'avatar-uploader', attrs: { action: 'http://ttapi.research.itcast.cn/mp/v1_0/user/images', headers: e.headers, name: 'image', 'show-file-list': !1, 'before-upload': e.hBeforeUpload, 'on-success': e.hUploadSuccess } }, [e.imageUrl ? a('el-image', { staticClass: 'avatar', attrs: { src: e.imageUrl }, on: { load: e.hpreviewImageload } }) : a('i', { staticClass: 'el-icon-plus avatar-uploader-icon' })], 1)], 1)], 1) }; var o = []; var r = (a('96cf'), a('1da1')); var i = { name: 'Imagedata', data: function () { return { dialogVisible: !1, isCollected: !1, curPage: 1, total_count: 0, isCollect: !1, images: [], imageUrl: '', headers: { Authorization: 'Bearer '.concat(localStorage.getItem('tokenStr')) } } }, created: function () { this.loadImages() }, methods: { loadImages: function () { var e = this; return Object(r.a)(regeneratorRuntime.mark(function t () { var a; return regeneratorRuntime.wrap(function (t) { while (1) switch (t.prev = t.next) { case 0:return t.next = 2, e.$http({ url: '/mp/v1_0/user/images', method: 'GET', params: { per_page: 10, collect: e.isCollected, page: e.curPage } }); case 2:a = t.sent, e.total_count = a.data.data.total_count, e.images = a.data.data.results; case 5:case 'end':return t.stop() } }, t) }))() }, YToggle: function () { console.log(this.isCollected), this.curPage = 1, this.loadImages() }, hPageChange: function (e) { this.curPage = e, this.loadImages() }, hUploadSuccess: function (e, t) { this.imageUrl = e.data.url, this.loadImages() }, hBeforeUpload: function (e) { var t = e.type === 'image/jpeg'; var a = e.size / 1024 / 1024 < 2; return t || this.$message.error('上传头像图片只能是 JPG 格式!'), a || this.$message.error('上传头像图片大小不能超过 2MB!'), t && a }, hpreviewImageload: function () { var e = this; console.log('图片预览成功', Date.now()), setTimeout(function () { e.dialogVisible = !1, e.imageUrl = '' }, 2e3) }, hSwitchCollect: function (e) { var t = this; return Object(r.a)(regeneratorRuntime.mark(function a () { var s, o; return regeneratorRuntime.wrap(function (a) { while (1) switch (a.prev = a.next) { case 0:return s = e.id, console.log(e), a.prev = 2, a.next = 5, t.$http({ url: '/mp/v1_0/user/images/' + s, method: 'PUT', data: { collect: !e.is_collected } }); case 5:o = a.sent, console.log(o), t.$message.success('操作成功'), e.is_collected = !e.is_collected, a.next = 15; break; case 11:a.prev = 11, a.t0 = a.catch(2), console.log(a.t0), t.$message.error('操作失败'); case 15:case 'end':return a.stop() } }, a, null, [[2, 11]]) }))() }, doDelete: function (e) { var t = this; return Object(r.a)(regeneratorRuntime.mark(function a () { var s; return regeneratorRuntime.wrap(function (a) { while (1) switch (a.prev = a.next) { case 0:return a.prev = 0, a.next = 3, t.$http({ url: '/mp/v1_0/user/images/' + e, method: 'DELETE' }); case 3:s = a.sent, t.$message.success('操作成功'), console.log(s), t.loadImages(), a.next = 13; break; case 9:a.prev = 9, a.t0 = a.catch(0), console.log(a.t0), t.$message.error('操作失败'); case 13:case 'end':return a.stop() } }, a, null, [[0, 9]]) }))() }, hDelete: function (e) { var t = this; this.$confirm('你真的删除吗?').then(function () { t.doDelete(e) }).catch(function () {}) } } }; var n = i; var l = (a('35bf'), a('2877')); var c = Object(l.a)(n, s, o, !1, null, '241ecaaa', null); t.default = c.exports }, '35bf': function (e, t, a) { 'use strict'; a('c8f3') }, c8f3: function (e, t, a) {} }])
// # sourceMappingURL=chunk-641bea04.c29c47b7.js.map
